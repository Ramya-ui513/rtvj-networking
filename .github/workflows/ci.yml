name: Terraform & Ansible Deployment

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        continue-on-error: true  # Prevents stopping if no changes

      - name: Terraform Apply (Only if changes exist)
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve tfplan

      - name: Extract VM IP
        run: terraform output -raw public_ip_address > vm_ip.txt
        id: get_vm_ip

      - name: Upload VM IP as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: vm_ip
          path: vm_ip.txt

  ansible:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Download VM IP
        uses: actions/download-artifact@v3
        with:
          name: vm_ip
          path: .

      - name: Read VM IP
        id: read_vm_ip
        run: echo "VM_IP=$(cat vm_ip.txt)" >> $GITHUB_ENV

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > my-azure-key.pem
          chmod 600 my-azure-key.pem

      - name: Setup Ansible Inventory
        run: |
          echo "[azure_vm]" > inventory.ini
          echo "$VM_IP ansible_user=azureuser ansible_ssh_private_key_file=my-azure-key.pem" >> inventory.ini

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini playbook.yml
